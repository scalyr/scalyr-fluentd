# This example configuration file describes a fluentd setup where there multiple fluentd workers
# running and different workers match events with different tags and send those events to different
# Scalyr accounts.
#
# In this example specifically, we have 4 workers running configured with 2 different Scalyr account.
# This means we have 2 workers per account.
#
# We perform event matching based on a tag name and assume tags have the following format:
# docker.<scalyr account name>.<container name>.
#
# This would be the case if you started your Dockers containers like this:
# docker run -d --rm --name container-1 --log-driver=fluentd --log-opt tag=docker.scalyr1.{{.ID}} ...
<system>
  workers 4
</system>

# this source listens on port 24224
# (the default fluentd port for the fluentd-docker log driver)
<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

# this matches anything coming from fluentd's docker logger with tag docker.scalyr1.*
<match docker.scalyr1.**>
  @type scalyr
  # Don't forget to change your token!!
  api_write_token <scalyr account 1 api key here>

  # only use deflate for compression, not bz2. bz2 has
  # a negative effect on performance
  compression_type deflate

  # use compression level 3 or 6.  9 will give very little
  # compression over level 6, but will dramatically increase CPU
  compression_level 3

  use_hostname_for_serverhost true
  scalyr_server https://agent.scalyr.com/
  # NOTE: On Fedora and some other distros, this may be
  # ssl_ca_bundle_path /etc/ssl/certs/ca-bundle.crt
  ssl_ca_bundle_path /etc/ssl/certs/ca-certificates.crt
  ssl_verify_peer true
  ssl_verify_depth 5

  # docker uses `log` for it's main log field.  Scalyr servers
  # expect this field to be called `message`, so set the plugin
  # to map the field `log` to `message`
  message_field log

  # This must be < 6000000 (there's a hard limit enforced on the server
  # The higher the number, the more bytes we can send per request.
  max_request_buffer 5900000

  force_message_encoding UTF-8
  replace_invalid_utf8 true
  # Add any additional server attributes here
  server_attributes {"serverType":"fluent-account1"}
  <buffer>
    chunk_limit_size 4MB
    compress text
    flush_mode interval
    flush_interval 5s
    flush_thread_count 1
    delayed_commit_timeout 30
    overflow_action throw_exception
  </buffer>
</match>

# this matches anything coming from fluentd's docker logger with tag docker.scalyr2.*
<match docker.scalyr2.**>
  @type scalyr
  # Don't forget to change your token!!
  api_write_token <scalyr account 2 api key here>

  # only use deflate for compression, not bz2. bz2 has
  # a negative effect on performance
  compression_type deflate

  # use compression level 3 or 6.  9 will give very little
  # compression over level 6, but will dramatically increase CPU
  compression_level 3

  use_hostname_for_serverhost true
  scalyr_server https://agent.scalyr.com/
  # NOTE: On Fedora and some other distros, this may be
  # ssl_ca_bundle_path /etc/ssl/certs/ca-bundle.crt
  ssl_ca_bundle_path /etc/ssl/certs/ca-certificates.crt
  ssl_verify_peer true
  ssl_verify_depth 5

  # docker uses `log` for it's main log field.  Scalyr servers
  # expect this field to be called `message`, so set the plugin
  # to map the field `log` to `message`
  message_field log

  # This must be < 6000000 (there's a hard limit enforced on the server
  # The higher the number, the more bytes we can send per request.
  max_request_buffer 5900000

  force_message_encoding UTF-8
  replace_invalid_utf8 true
  # Add any additional server attributes here
  server_attributes {"serverType":"fluent-account2"}
  <buffer>
    chunk_limit_size 4MB
    compress text
    flush_mode interval
    flush_interval 5s
    flush_thread_count 1
    delayed_commit_timeout 30
    overflow_action throw_exception
  </buffer>
</match>
