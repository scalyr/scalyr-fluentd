# This example configuration describes the same configuration as the one in
# examples/configs/fluentd_docker_multiple_workers_multiple_accounts.conf,
# but it assumes you are not using multiple workers fluentd functionality.
#
# Not using multiple workers functionality of fluentd increases complexity a lot, because it means
# you need to run multiple fluentd instances on different ports. In addition to that, you need to
# configure your source to send logs to the correct fluentd instance. When possible, you are
# advised to use multiple workers functionality.
#
# In this configuration, events are routed to the appropriate Scalyr account based on the port
# your Docker container sends the log data to. For example:
#
# Events for account 1:
# docker run -d --rm --name container-1 --log-driver=fluentd --log-opt tag=docker.scalyr1.{{.ID}} --log-opt fluentd-address=localhost:24224 ...
#
# Events for account 1:
# docker run -d --rm --name container-1 --log-driver=fluentd --log-opt tag=docker.scalyr2.{{.ID}} --log-opt fluentd-address=localhost:24225 ...
#
# And you would run fluentd servers like this:
#
# sudo fluentd -c fluentd-worker-0-account-1.conf
# sudo fluentd -c fluentd-worker-1-account-1.conf
# sudo fluentd -c fluentd-worker-2-account-2.conf
# ...

<source>
  @type forward
  # This port would need to be different for each fluentd process you run
  port 24224
  bind 0.0.0.0
</source>

# this matches anything coming from fluentd's docker logger
<match docker.**>
  @type scalyr
  # Don't forget to change your token!!
  api_write_token <scalyr account n api key here>

  # only use deflate for compression, not bz2. bz2 has
  # a negative effect on performance
  compression_type deflate

  # use compression level 3 or 6.  9 will give very little
  # compression over level 6, but will dramatically increase CPU
  compression_level 3

  use_hostname_for_serverhost true
  scalyr_server https://agent.scalyr.com/
  # NOTE: On Fedora and some other distros, this may be
  # ssl_ca_bundle_path /etc/ssl/certs/ca-bundle.crt
  ssl_ca_bundle_path /etc/ssl/certs/ca-certificates.crt
  ssl_verify_peer true
  ssl_verify_depth 5

  # docker uses `log` for it's main log field.  Scalyr servers
  # expect this field to be called `message`, so set the plugin
  # to map the field `log` to `message`
  message_field log

  # This must be < 6000000 (there's a hard limit enforced on the server
  # The higher the number, the more bytes we can send per request.
  max_request_buffer 5900000

  force_message_encoding UTF-8
  replace_invalid_utf8 true
  # Add any additional server attributes here
  server_attributes {"serverType":"fluent-loadtest-accountn"}
  <buffer>
    chunk_limit_size 4MB 
    compress text
    flush_mode interval
    flush_interval 5s
    flush_thread_count 1
    delayed_commit_timeout 30
    overflow_action throw_exception
  </buffer>
</match>
